(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{517:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/02/02/5CdUr1mYIBEobny.png",alt:"image.png"}})]),t._v(" "),a("h1",{attrs:{id:"css-世界学习总结-第三章-流、元素与基本尺寸"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-世界学习总结-第三章-流、元素与基本尺寸"}},[t._v("#")]),t._v(" css 世界学习总结 - 第三章 流、元素与基本尺寸")]),t._v(" "),a("h2",{attrs:{id:"流体布局引出的几种网页布局方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流体布局引出的几种网页布局方式"}},[t._v("#")]),t._v(" 流体布局引出的几种网页布局方式")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("布局方式")]),t._v(" "),a("th",[t._v("描述")]),t._v(" "),a("th",[t._v("特点")]),t._v(" "),a("th",[t._v("场景")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("静态布局")]),t._v(" "),a("td",[t._v("Static Layout，传统Web设计，网页上的所有元素的尺寸一律使用px作为单位。不管浏览器尺寸具体是多少，网页布局始终按照最初写代码时的布局来显示。一般需要设置最小宽度")]),t._v(" "),a("td",[t._v("不能根据用户的屏幕尺寸做出不同的表现")]),t._v(" "),a("td",[t._v("传统PC网页")])]),t._v(" "),a("tr",[a("td",[t._v("流式布局")]),t._v(" "),a("td",[t._v("Liquid Layout，页面元素的宽度按照屏幕分辨率进行适配调整，但整体布局不变。代表作栅栏系统（网格系统）")]),t._v(" "),a("td",[t._v("网页中主要的划分区域的尺寸使用百分数（搭配min-、max-属性使用）")]),t._v(" "),a("td",[t._v("屏幕分辨率变化时，页面里元素的大小会变化而但布局不变")])]),t._v(" "),a("tr",[a("td",[t._v("自适应布局")]),t._v(" "),a("td",[t._v("Adaptive Layout，使用@media分别为不同的屏幕分辨率定义布局，即创建多个静态布局，每个静态布局对应一个屏幕分辨率范围")]),t._v(" "),a("td",[t._v("屏幕分辨率变化时，页面里面元素的位置会变化而大小不会变化")]),t._v(" "),a("td",[t._v("-")])]),t._v(" "),a("tr",[a("td",[t._v("响应式布局")]),t._v(" "),a("td",[t._v("Responsive Layout，一个页面在所有终端上（各种尺寸的PC、手机、手表、冰箱的Web浏览器等等）都能显示出令人满意的效果")]),t._v(" "),a("td",[t._v("每个屏幕分辨率下面会有一个布局样式，即元素位置和大小都会变")]),t._v(" "),a("td",[t._v("多终端页面")])]),t._v(" "),a("tr",[a("td",[t._v("弹性布局")]),t._v(" "),a("td",[t._v("rem/em布局，包裹文字的各元素的尺寸采用em/rem做单位，而页面的主要划分区域的尺寸仍使用百分数或px做单位")]),t._v(" "),a("td",[t._v("理想状态是所有屏幕的高宽比和最初的设计高宽比一样，或者相差不多，完美适应")]),t._v(" "),a("td",[t._v("移动端")])])])]),t._v(" "),a("p",[t._v("结论：")]),t._v(" "),a("ol",[a("li",[t._v("如果只做pc端，那么静态布局（定宽度）是最好的选择；")]),t._v(" "),a("li",[t._v("如果做移动端，且设计对高度和元素间距要求不高，那么弹性布局（rem+js）是最好的3选择，一份css+一份js调节font-size搞定；")]),t._v(" "),a("li",[t._v("如果pc，移动要兼容，而且要求很高那么响应式布局还是最好的选择，前提是设计根据不同的高宽做不同的设计，响应式根据媒体查询做不同的布局。")])]),t._v(" "),a("h2",{attrs:{id:"流体布局是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流体布局是什么"}},[t._v("#")]),t._v(" 流体布局是什么")]),t._v(" "),a("p",[t._v("所谓“流体布局”，指的是利用元素“流”的特性实现的各类布局效果。因为“流”本身 具有自适应特性，所以“流体布局”往往都是具有自适应性的。\n但是，“流体布局”并不等同于 “自适应布局”。\n“自适应布局”是对凡是具有自适应特性的一类布局的统称，“流体布局”要狭窄得多。例如，表格布局也可以设置为100%自适应，但表格和“流”不是一路的，并不属于“流体布局”。\n通俗的说，流体布局就是在width:auto;或者格式化宽/高中，通过设定margin/border/padding来影响content的布局的方式")]),t._v(" "),a("h2",{attrs:{id:"什么是块级元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是块级元素"}},[t._v("#")]),t._v(" 什么是块级元素")]),t._v(" "),a("p",[t._v("HTML标签通常分为块级元素(block-level element)和内联元素(inline element)\n块级元素：一个水平流上只能单独显示一个块级元素如\n内联元素：一个水平流可显示多个内联元素（常用如 img a span button input etc）")]),t._v(" "),a("h3",{attrs:{id:"哪些元素是内联元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#哪些元素是内联元素"}},[t._v("#")]),t._v(" 哪些元素是内联元素")]),t._v(" "),a("p",[t._v("从表现看就行为表现来看，“内联元素”的典型特征就是可以和文字在一行显示。因此，文字是内联元素，图片是内联元素，按钮是内联元素，输入框、下拉框等原生表单控件也是内联元素")]),t._v(" "),a("h2",{attrs:{id:"为什么list-item元素会出现项目符号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么list-item元素会出现项目符号"}},[t._v("#")]),t._v(" 为什么list-item元素会出现项目符号")]),t._v(" "),a("p",[t._v("list-item 使用附加的标记盒子，专门用来放圆点、数字这些项目符号。")]),t._v(" "),a("h2",{attrs:{id:"盒子模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#盒子模型"}},[t._v("#")]),t._v(" 盒子模型")]),t._v(" "),a("blockquote",[a("p",[t._v("每个元素都有两个盒子，外在盒子和内在盒子。外在盒子负责元素是可以一行显示，还是只能换行显示；内在盒子负责宽高、内容呈现什么的。或则内在盒子叫“容器盒子”")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("盒子模型")]),t._v(" "),a("th",[t._v("外在盒子")]),t._v(" "),a("th",[t._v("内在盒子")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("block")]),t._v(" "),a("td",[t._v("block")]),t._v(" "),a("td",[t._v("block")])]),t._v(" "),a("tr",[a("td",[t._v("inline")]),t._v(" "),a("td",[t._v("inline")]),t._v(" "),a("td",[t._v("inline")])]),t._v(" "),a("tr",[a("td",[t._v("inline-block")]),t._v(" "),a("td",[t._v("inline")]),t._v(" "),a("td",[t._v("block")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("width/height作用在内在盒子，也就是内容盒子上")])]),t._v(" "),a("h2",{attrs:{id:"深藏不露的width-auto"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深藏不露的width-auto"}},[t._v("#")]),t._v(" 深藏不露的width:auto")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("充分利用可用空间")]),t._v(" 块级元素的默认宽度是父级元素的宽度的100%")]),t._v(" "),a("li",[a("strong",[t._v("收缩与包裹")]),t._v(" 当元素处于浮动、绝对定位或者为内联块元素或table元素，父级元素失去原有宽度收缩到与内部元素一样")]),t._v(" "),a("li",[a("strong",[t._v("收缩到最小")]),t._v(" 这个容易出现在table-layout为auto的表格中，为了不超过父级元素的宽度")]),t._v(" "),a("li",[a("strong",[t._v("超出容器限制")]),t._v(" 除非有明确的width相关设置，否则上面3种情况尺寸都不会主动超过父级容器宽度，但是存在一些特殊情况。除非是很长的英文，或者设置white-space: nowrap")])]),t._v(" "),a("h3",{attrs:{id:"外部尺寸与流体特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#外部尺寸与流体特性"}},[t._v("#")]),t._v(" 外部尺寸与流体特性")]),t._v(" "),a("h4",{attrs:{id:"_1-正常流宽度-100"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-正常流宽度-100"}},[t._v("#")]),t._v(" 1.正常流宽度 100%")]),t._v(" "),a("p",[t._v("在页面中随便扔一个div元素，其尺寸表现就会和水流一样铺满容器。这就 是block 容器的流特性。")]),t._v(" "),a("blockquote",[a("p",[t._v("所谓流动性是一种根据 margin/border/padding/content 属性对其内容区域自动分配水平空间的机制")])]),t._v(" "),a("p",[t._v("举一个书中的例子")]),t._v(" "),a("iframe",{staticStyle:{width:"100%"},attrs:{height:"265",scrolling:"no",title:"oNYgyEJ",src:"https://codepen.io/wxy521/embed/oNYgyEJ?height=265&theme-id=light&default-tab=html,result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"}},[t._v("\n  See the Pen "),a("a",{attrs:{href:"https://codepen.io/wxy521/pen/oNYgyEJ"}},[t._v("oNYgyEJ")]),t._v(" by wxy\n  ("),a("a",{attrs:{href:"https://codepen.io/wxy521"}},[t._v("@wxy521")]),t._v(") on "),a("a",{attrs:{href:"https://codepen.io"}},[t._v("CodePen")]),t._v(".\n")]),t._v(" "),a("p",[t._v("这是一个对比演示，上下两个导航均有margin和padding，前者无width设置，完全借助流的特性，后者宽度width:100%。\n结果，后者的尺寸超出了外部的容器，完全就不像“水流”那样完全利用容器空间，即所谓的“流动性丢失”")]),t._v(" "),a("blockquote",[a("p",[t._v("width的百分比，参考的是父元素的content的width。此外所有和百分比相关的位置、大小设置，都是基于父元素的content。")])]),t._v(" "),a("h4",{attrs:{id:"_2-格式化宽度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-格式化宽度"}},[t._v("#")]),t._v(" 2.格式化宽度")]),t._v(" "),a("p",[t._v('格式化宽度仅出现在"绝对定位模型"中，也就是出现在position属性值为absolute和fixed的元素中，在预设情况下绝对定位元素的宽度表现是"包裹性"，"宽度由内部尺寸决定"，但是有一中情况下由外部尺寸决定。')]),t._v(" "),a("blockquote",[a("p",[t._v("在 CSS 中，可替换元素（replaced element）的展现效果不是由 CSS 来控制的。这些元素是一种外部对象，它们外观的渲染，是独立于 CSS 的。\n典型的可替换元素有："),a("code",[t._v("<iframe><video><embed><img>")])])]),t._v(" "),a("p",[t._v("对于非替换元素，当 left/right 或 top/bottom 对立方位的属性值同时存在的时候，元素的宽度表现为“格式化宽度”，其宽度大小相对于最近的具有定位特性 (position属性值不是static) 的祖先元素计算")]),t._v(" "),a("p",[t._v("例子格式化宽度实现水平垂直居中")]),t._v(" "),a("iframe",{staticStyle:{width:"100%"},attrs:{height:"265",scrolling:"no",title:"格式化宽度实现水平垂直居中",src:"https://codepen.io/wxy521/embed/zYoxLry?height=265&theme-id=light&default-tab=css,result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"}},[t._v("\n  See the Pen "),a("a",{attrs:{href:"https://codepen.io/wxy521/pen/zYoxLry"}},[t._v("格式化宽度实现水平垂直居中")]),t._v(" by wxy\n  ("),a("a",{attrs:{href:"https://codepen.io/wxy521"}},[t._v("@wxy521")]),t._v(") on "),a("a",{attrs:{href:"https://codepen.io"}},[t._v("CodePen")]),t._v(".\n")]),t._v(" "),a("h3",{attrs:{id:"内部尺寸与流体特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内部尺寸与流体特性"}},[t._v("#")]),t._v(" 内部尺寸与流体特性")]),t._v(" "),a("blockquote",[a("p",[t._v("所谓“内部尺寸”，简单来讲就是元素的尺寸由内部的元素决定，而非由外部的容器决定。")])]),t._v(" "),a("h4",{attrs:{id:"_1-包裹性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-包裹性"}},[t._v("#")]),t._v(" 1.包裹性")]),t._v(" "),a("p",[t._v("包裹性”除了“包裹”，还有“自适应性”。所谓“自适应性”指的是元素尺寸由内部元素决定，但永远小于“包含块”容器的尺寸(除非容器尺寸小于元素的“首选最小宽度”)。")]),t._v(" "),a("blockquote",[a("p",[t._v("按钮就是css世界中极具代表性的inline-block元素，可谓展示“包裹性”最好的例子，具体表现为：按钮文字越多宽度越宽(内部尺寸特性)，但如果文字足够多，则会在容器的宽度处自动换行(自适应性)")])]),t._v(" "),a("h4",{attrs:{id:"_2-首选最小宽度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-首选最小宽度"}},[t._v("#")]),t._v(" 2.首选最小宽度")]),t._v(" "),a("p",[t._v("图片和文字的权重要远大于布局，当布局中存在更高权重元素时(如width:0 不生效)最小宽度受其内容影响\n(文字中的最小宽度为单个字符宽度)")]),t._v(" "),a("blockquote",[a("p",[t._v("word-break: break-all\nbreak-all\n对于non-CJK (CJK 指中文/日文/韩文) 文本，可在任意字符间断行。")])]),t._v(" "),a("h4",{attrs:{id:"_3-最大宽度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-最大宽度"}},[t._v("#")]),t._v(" 3.最大宽度")]),t._v(" "),a("blockquote",[a("p",[t._v("white-space CSS 属性是用来设置如何处理元素中的空白。")])]),t._v(" "),a("p",[t._v("最大宽度就是元素可以有的最大宽度。“最大宽度”实际等同于“包裹性”元素设置white-space: nowrap 声明后的宽度。(连续的空白符会被合并。但文本内的换行无效) 如果内部没有块级元素或者块级元素没有设定宽度值，则“最大宽度”实际上是最大的连续内联盒子的宽度")]),t._v(" "),a("h2",{attrs:{id:"css流体布局下的宽度分离原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css流体布局下的宽度分离原则"}},[t._v("#")]),t._v(" css流体布局下的宽度分离原则")]),t._v(" "),a("p",[t._v("使用双层嵌套实现内容自适应")]),t._v(" "),a("iframe",{staticStyle:{width:"100%"},attrs:{height:"265",scrolling:"no",title:"宽度分离",src:"https://codepen.io/wxy521/embed/dyOPLXv?height=265&theme-id=light&default-tab=css,result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"}},[t._v("\n  See the Pen "),a("a",{attrs:{href:"https://codepen.io/wxy521/pen/dyOPLXv"}},[t._v("宽度分离")]),t._v(" by wxy\n  ("),a("a",{attrs:{href:"https://codepen.io/wxy521"}},[t._v("@wxy521")]),t._v(") on "),a("a",{attrs:{href:"https://codepen.io"}},[t._v("CodePen")]),t._v(".\n")]),t._v(" "),a("blockquote",[a("p",[t._v("所谓“宽度分离原则”就是css中的width属性不与影响宽度的padding/border（有时候包括margin）属性共存, 通过设置 padding,margin,border,内部内容通过 width：auto 自动填充")])]),t._v(" "),a("h2",{attrs:{id:"改变width-height作用细节的box-sizing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#改变width-height作用细节的box-sizing"}},[t._v("#")]),t._v(" 改变width/height作用细节的box-sizing")]),t._v(" "),a("h3",{attrs:{id:"box-sizing的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#box-sizing的作用"}},[t._v("#")]),t._v(" box-sizing的作用")]),t._v(" "),a("p",[t._v("box-sizing属性是改变width的作用细节,改变了width作用所在的盒子")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" content-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 默认值 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" padding-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* firefox曾经支持 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" border-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 全线支持 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" margin-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 从未支持过 */")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"如何评价-box-sizing-border-box"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何评价-box-sizing-border-box"}},[t._v("#")]),t._v(" 如何评价*{box-sizing: border-box}")]),t._v(" "),a("p",[t._v("这种做法易产生没必要的消耗。通配符 * 应该是一个慎用的选择器，因为它会选择所有的标签元素。其对与某些元素 box-sizing 无论是什么值，对其渲染表现都没有影响，* 对这些元素而言就是没有必要的消耗。")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 这样重置更合理 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("input, textarea, img, video, object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" border-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"box-sizing发明的初衷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#box-sizing发明的初衷"}},[t._v("#")]),t._v(" box-sizing发明的初衷")]),t._v(" "),a("p",[a("code",[t._v("box-sizing:border-box")]),t._v("最常见的用途就是原生普通文本框input和文本域textarea的100%自适应父容器宽度")]),t._v(" "),a("p",[t._v("例如textarea宽度100%自适应")]),t._v(" "),a("iframe",{staticStyle:{width:"100%"},attrs:{height:"363",scrolling:"no",title:"textarea宽度100%自适应",src:"https://codepen.io/wxy521/embed/dyOPLrd?height=363&theme-id=light&default-tab=css,result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"}},[t._v("\n  See the Pen "),a("a",{attrs:{href:"https://codepen.io/wxy521/pen/dyOPLrd"}},[t._v("textarea宽度100%自适应")]),t._v(" by wxy\n  ("),a("a",{attrs:{href:"https://codepen.io/wxy521"}},[t._v("@wxy521")]),t._v(") on "),a("a",{attrs:{href:"https://codepen.io"}},[t._v("CodePen")]),t._v(".\n")]),t._v(" "),a("blockquote",[a("p",[t._v("box-sizing被发明出来最大的初衷应该是解决替换元素宽度自适应问题。")])]),t._v(" "),a("h2",{attrs:{id:"相对简单而单纯的height-auto"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相对简单而单纯的height-auto"}},[t._v("#")]),t._v(" 相对简单而单纯的height:auto")]),t._v(" "),a("blockquote",[a("p",[t._v("height:auto也有外部尺寸特性。其仅存在于绝对定位模型中，也就是“格式化高度”与“格式化宽度”")])]),t._v(" "),a("h3",{attrs:{id:"关于height-100"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于height-100"}},[t._v("#")]),t._v(" 关于height:100%")]),t._v(" "),a("blockquote",[a("p",[t._v("height和width还有一个比较明显的区别就是对百分比单位的支持。对于width属性，就算父元素width为auto，其百分比也是支持的；但是，对于height属性，如果父元素height为auto，只要子元素在文档流中，其百分比值完全就被忽略了。")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 这是多余的 */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 这是无效的 */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bg.jpg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"为何height-100-无效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为何height-100-无效"}},[t._v("#")]),t._v(" 为何height:100%无效")]),t._v(" "),a("p",[t._v("要明白其中的原因要先了解浏览器渲染的基本原理。\n首先，先下载文档内容，加载头部样式资源（如果有的话），然后按照从上而下、自外而内的顺序渲染DOM内容。\n套用本例就是，先渲染父级元素，后渲染子元素，是有先后顺序的。因此，当渲染到父元素的时候，子元素的width:100%并没有渲染，宽度就是图片加文字内容的宽度；等渲染到文字这个元素的时候，父元素的宽度已经固定，此时的width:100%就是已经固定好的父元素的宽度。\n宽度不够怎么办？溢出就好了，overflow属性就是为此而生的")]),t._v(" "),a("p",[t._v("因为没有显示定义height由仅内容填充，则解释成了auto。")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'auto'")]),t._v(" * 100/100 = NaN\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("height:100%无效")]),t._v(" "),a("h3",{attrs:{id:"如何让元素支持height-100-效果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何让元素支持height-100-效果"}},[t._v("#")]),t._v(" 如何让元素支持height:100%效果")]),t._v(" "),a("h4",{attrs:{id:"设定显式的高度值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设定显式的高度值"}},[t._v("#")]),t._v(" 设定显式的高度值")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("html, body")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h4",{attrs:{id:"使用绝对定位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用绝对定位"}},[t._v("#")]),t._v(" 使用绝对定位")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("blockquote",[a("p",[t._v("绝对定位元素的百分比计算和非绝对定位的百分比计算是有区别的，区别在于绝对定位的宽高百分比计算是相对与padding box的，也就是说会把padding大小的值计算在内，但是，非绝对定位元素则是相对于content box计算的")])]),t._v(" "),a("p",[t._v("如绝对定位和非绝对定位元素百分比值计算区别\n"),a("iframe",{staticStyle:{width:"100%"},attrs:{height:"265",scrolling:"no",title:"绝对定位和非绝对定位元素百分比值计算区别",src:"https://codepen.io/wxy521/embed/vYyEqaX?height=265&theme-id=light&default-tab=css,result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"}},[t._v("\nSee the Pen "),a("a",{attrs:{href:"https://codepen.io/wxy521/pen/vYyEqaX"}},[t._v("绝对定位和非绝对定位元素百分比值计算区别")]),t._v(" by wxy\n("),a("a",{attrs:{href:"https://codepen.io/wxy521"}},[t._v("@wxy521")]),t._v(") on "),a("a",{attrs:{href:"https://codepen.io"}},[t._v("CodePen")]),t._v(".\n")])]),t._v(" "),a("p",[t._v("任意大小图片的左右半区布局")]),t._v(" "),a("iframe",{staticStyle:{width:"100%"},attrs:{height:"265",scrolling:"no",title:"任意大小图片的左右半区布局",src:"https://codepen.io/wxy521/embed/YzpPmyV?height=265&theme-id=light&default-tab=css,result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"}},[t._v("\n  See the Pen "),a("a",{attrs:{href:"https://codepen.io/wxy521/pen/YzpPmyV"}},[t._v("任意大小图片的左右半区布局")]),t._v(" by wxy\n  ("),a("a",{attrs:{href:"https://codepen.io/wxy521"}},[t._v("@wxy521")]),t._v(") on "),a("a",{attrs:{href:"https://codepen.io"}},[t._v("CodePen")]),t._v(".\n")]),t._v(" "),a("blockquote",[a("p",[t._v("只要在图片上覆盖两个绝对定位，同时设height:100%，则无论图片多高，我们的左右半区都能自动和图片高度一模一样，无须任何使用javascript计算")])]),t._v(" "),a("h2",{attrs:{id:"css-min-width-max-width和min-height-max-height"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-min-width-max-width和min-height-max-height"}},[t._v("#")]),t._v(" CSS min-width/max-width和min-height/max-height")]),t._v(" "),a("h3",{attrs:{id:"为流体而生的min-width-max-width"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为流体而生的min-width-max-width"}},[t._v("#")]),t._v(" 为流体而生的min-width/max-width")]),t._v(" "),a("p",[t._v("比如，网页宽度在1200～1400像素自适应，既满足大屏的大气又满足笔记本的良好显示，此时，min-width/max-width就可以大显神威了")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("min-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("max-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1400px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("公众号的热门文章中，经常会有图片，这些图片都是用户上传产生的，因此尺寸会有大有小，为了避免图片在移动端展示过大的影响体验，常常会有下面的max-width限制")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("max-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto"),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("!important")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("blockquote",[a("p",[t._v("原始图片有设定height，max-widht生效的时候图片就会被水平压缩。强制height为auto可以确保宽度不超出的同时使图片保持原来的比例。\n但这样也会有体验上的问题，那就是在加载时图片占据高度会从0变成计算高度，图文会有明显的瀑布式下落")])]),t._v(" "),a("h3",{attrs:{id:"与众不同的初始值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与众不同的初始值"}},[t._v("#")]),t._v(" 与众不同的初始值")]),t._v(" "),a("blockquote",[a("p",[t._v("min-weidht/min-height 的初始值是auto，max-width/max-height 的初始值是 none")])]),t._v(" "),a("h3",{attrs:{id:"超越-important，超越最大"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#超越-important，超越最大"}},[t._v("#")]),t._v(" 超越!important，超越最大")]),t._v(" "),a("p",[a("strong",[t._v("超越 !important 指的是 max-width 会覆盖 width")])]),t._v(" "),a("p",[t._v("比方说，针对下面的 HTML 和 CSS 设置，图片最后呈现的宽度是多少？")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("scr")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("1.jpg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token style-attr language-css"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('="')]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 480px"),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("!important")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("max-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 256px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("答案是256px。style、!important通通靠边站！因为max-width会覆盖width")]),t._v(" "),a("p",[a("strong",[t._v("超越最大指的是 min-width 的值大于 max-width 值时取 min-width 的值")]),t._v("\n超越最大值得是 min-width 覆盖 max-width ，此规则发生在 min-width 和 max-width 冲突时")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("min-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1400px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("max-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("最小宽度比最大宽度设置得还要大，遵循“超越最大”规则(注意不是“后台者居上”规则) 值取min-width,max-width被忽略，于是，.container元素表现为至少1400像素宽")]),t._v(" "),a("h2",{attrs:{id:"任意高度元素的展开收起动画技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#任意高度元素的展开收起动画技术"}},[t._v("#")]),t._v(" 任意高度元素的展开收起动画技术")]),t._v(" "),a("p",[t._v("第一反应就是使用height + overflow:hidden实现，但是，很多时候我们展开的元素内容是动态的，换句话说高度不是固定的，因此，height使用的值是默认的auto，应该都知道的auto是个关键字值，并非数值，正如height: 100%的100%无法和auto相计算一样，从0px到auto是无法计算的，因此无法形成过渡或动画效果")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 因此，下面代码呈现的效果也是生硬的展开和收起 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".element")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" height .25s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".element.active")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 没有transition效果，只是生硬的展开 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 难道就没有什么一劳永逸的实现方法吗？有，不妨试试max-height */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".element")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("max-height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" max-height .25s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".element.active")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("max-height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 666px "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 一个足够大的高度值 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br")])]),a("blockquote",[a("p",[t._v("其中展开后的max-height值，我们只需要设定为保证比展开内容高度大的值就可以，因为max-height值比height计算值大的时候，元素的高度就是height属性的计算高度,\n在本交互中，也就是height: auto时候的高度值。于是，一个高度不定的任意元素的展开动画就实现了")])]),t._v(" "),a("p",[t._v("应用：")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 使用max-height实现任意高度元素的展开收起动画 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@mixin")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slide-vertical")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$maxHeight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("initMaxHeight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("duration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(".25s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("max-height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $initMaxHeight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" max-height $duration"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(";\n  &.active")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("max-height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $maxHeight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("iframe",{staticStyle:{width:"100%"},attrs:{height:"265",scrolling:"no",title:"max-height与任意高度元素滑动展开收起效果",src:"https://codepen.io/wxy521/embed/WNovRzd?height=265&theme-id=light&default-tab=html,result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"}},[t._v("\n  See the Pen "),a("a",{attrs:{href:"https://codepen.io/wxy521/pen/WNovRzd"}},[t._v("max-height与任意高度元素滑动展开收起效果")]),t._v(" by wxy\n  ("),a("a",{attrs:{href:"https://codepen.io/wxy521"}},[t._v("@wxy521")]),t._v(") on "),a("a",{attrs:{href:"https://codepen.io"}},[t._v("CodePen")]),t._v(".\n")]),t._v(" "),a("blockquote",[a("p",[t._v("但是，使用此方法也有一点要注意，既虽然从适用范围讲，max-height值越大使用场景越多，但是，如果max-height值太大，在收起的时候可能会有“效果延迟”的问题。比方说，展开的元素高度是100px，而max-height是1000px，动画时间是250ms，假设动画函数是线性的，则前255ms我们是看不到收起效果的，因为max-height从1000像素到100像素变化这段时间，元素不会有区域被隐藏，会给人动画延迟225ms的感觉")])]),t._v(" "),a("p",[t._v("因此，建议max-height使用足够安全的最小值，这样，收起时即使有延迟效果，也会因为时间很短，很难给用户察觉，并不会影响体验")])])}),[],!1,null,null,null);s.default=e.exports}}]);